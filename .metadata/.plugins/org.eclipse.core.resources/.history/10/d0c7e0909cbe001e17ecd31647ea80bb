package pizzeria_v04;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;

public class MainPizza {

	public static void main(String[] args) {
		
		Scanner tec = new Scanner(System.in);
		
		// genero un arrayList para cada clase
		ArrayList<Pizza> pizzaList = new ArrayList<Pizza>();
		ArrayList<Usuario> usuarioList = new ArrayList<Usuario>();
		ArrayList<Pedido> pedidoList = new ArrayList<Pedido>();
		
		// genero variables para la manipulacion de la BD
		Statement sentencia;
		ResultSet resultado;
		
		try {
			// conexion con la BD
			String url = "jdbc:mysql://localhost/pizzeria";
			String user = "root";
			String pass = "";
			Connection conexion = DriverManager.getConnection(url, user, pass);
			
			// guardo en cada arraylist los datos de la BD desde su respectiva tabla
			sentencia = conexion.createStatement();
			resultado = sentencia.executeQuery("SELECT * FROM pizza");
			while (resultado.next()) {
				pizzaList.add(new Pizza(resultado.getInt("id"), resultado.getString("nombre"), resultado.getString("ingredientes"), resultado.getDouble("precio")));
			}
			resultado = sentencia.executeQuery("SELECT * FROM usuario");
			while (resultado.next()) {
				usuarioList.add(new Usuario(resultado.getInt("id"), resultado.getString("nombre"), resultado.getString("apellido")));
			}
			resultado = sentencia.executeQuery("SELECT * FROM pedido");
			while (resultado.next()) {
				pedidoList.add(new Pedido(resultado.getInt("idpizza"), resultado.getInt("idusuario"), resultado.getInt("idpedido"), resultado.getInt("cantidad")));
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("error de conexion");
		}
		
		int menuNum;
		do {
			
			System.out.println("¿que quieres hacer?");
			System.out.println("1 listar las pizzas");
			System.out.println("2 listar los usuarios");
			System.out.println("3 listar los pedidos");
			System.out.println("4 incluir una nueva pizza");
			System.out.println("5 incluir un nuevo usuario");
			System.out.println("6 incluir un nuevo pedido");
			System.out.println("7 borrar una pizza");
			System.out.println("8 borrar un usuario");
			System.out.println("9 borrar un pedido");
			System.out.println("0 salir");
			menuNum = tec.nextInt();
			
			switch (menuNum) {
			case 1:
				System.out.println("listando las pizzas..");
				for (Pizza pizza : pizzaList) {
					System.out.println(pizza);
				}
				System.out.println();
				break;
			case 2:
				System.out.println("listando los usuarios..");
				for (Usuario usuario : usuarioList) {
					System.out.println(usuario);
				}
				System.out.println();
				break;
			case 3:
				System.out.println("listando los pedidos..");
				for (Pedido pedido : pedidoList) {
					System.out.println(pedido);
				}
				System.out.println();
				break;
			case 4:
				System.out.println("¿que pizza quieres añadir?");
				Pizza pizza = new Pizza();
				pizza.leerTec(tec);
				if (pizzaList.contains(pizza)) {
					System.out.println("la pizza ya existe");
				} else {
					pizzaList.add(pizza);
					System.out.println("pizza añadida!");
				}
				System.out.println();
				break;
			case 5:
				System.out.println("¿que usuario quieres añadir?");

				System.out.println();
				break;
			case 6:
				System.out.println("¿que pedido quieres añadir?");

				System.out.println();
				break;
			case 7:
				System.out.println("¿que pizza quieres borrar?");

				System.out.println();
				break;
			case 8:
				System.out.println("¿que usuario quieres borrar?");

				System.out.println();
				break;
			case 9:
				System.out.println("¿que pedido quieres borrar?");

				System.out.println();
				break;
			case 0:
				System.out.println("hasta luego!");
				System.exit(0);
			}
			
		} while(menuNum != 0);
		
	}

}
